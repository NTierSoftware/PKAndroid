<?xml version="1.0" encoding="utf-8"?>
<manifest package="org.peacekeeper.app"
          xmlns:android="http://schemas.android.com/apk/res/android">

    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
    <!-- <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/> -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <!-- http://developer.samsung.com/technical-doc/view.do?v=T000000103 -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
    <uses-permission android:name="android.permission.GET_ACCOUNTS"/>
    <!-- required by AccountManager#addAccount() -->
    <uses-permission android:name="android.permission.MANAGE_ACCOUNTS"/>
    <uses-permission android:name="android.permission.USE_CREDENTIALS"/>
    <!-- Authenticator -->
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS"/>
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.READ_PROFILE"/>
    <uses-permission android:name="android.permission.READ_CONTACTS"/>

    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true"/>

    <!-- http://stackoverflow.com/questions/15718869/how-to-lock-android-apps-orientation-to-portrait-mode -->
    <uses-feature
        android:name="android.hardware.screen.portrait"
        android:required="true"/>

    <!--
        <activity
            android:name=".MainActivity"
                        android:label="@string/app_name"
            android:theme="@style/AppTheme.NoActionBar"
    -->
    <application
        android:name=".pkApplication"
        android:allowBackup="true"
        android:icon="@drawable/iclaunch_peacekeeper"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        android:name="android.support.multidex.MultiDexApplication"

        <!--
     The API key for Google Maps-based APIs is defined as a string resource.
     (See the file "res/values/google_maps_api.xml").
     Note that the API key is linked to the encryption key used to sign the APK.
     You need a different API key for each encryption key, including the release key that is used to
     sign the APK for publishing.
     You can define the keys for the debug and release targets in src/debug/ and src/release/.
        -->
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="@string/google_maps_key"/>

        <activity android:name=".MainEntryAct">
            android:launchMode="singleInstance"
            android:noHistory="true" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>

        <!--
                <activity
                    android:name=".Main1"
                    android:screenOrientation="portrait">
                    <intent-filter>
                        <action android:name="android.intent.action.MAIN"/>
                        <category android:name="android.intent.category.LAUNCHER"/>
                    </intent-filter>
                </activity>
        -->


        <!-- <activity android:name=".actRegistration"> -->
        <activity android:name=".actGeocoder">
            android:label="@string/RegisterYourLocn"
<!--
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
-->
        </activity>
        <!-- <activity android:name=".MyLocationDemoActivity"/> -->
        <!-- android:label="@string/my_location_demo_label" -->


        <!-- Authenticator related activities and service needs to be declared here in order for the app to recognize them -->
        <activity
            android:name="udinic.accounts_authenticator_example.authentication.AuthenticatorActivity"
            android:label="@string/login_label"/>
        <activity
            android:name="udinic.accounts_authenticator_example.authentication.SignUpActivity"
            android:label="@string/signup_title"/>

        <service android:name="udinic.accounts_authenticator_example.authentication.UdinicAuthenticatorService">
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator"/>
            </intent-filter>

            <meta-data
                android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticator"/>
        </service>

        <activity
            android:name=".actRegistration"
            android:label="Registration"/>

        <!--
Service to send REST request to the Peacekeeper Webserver. Setting the
android:exported attribute to "false" stops other apps from starting this
service, even when using an explicit intent.
-->
        <service
            android:name="org.peacekeeper.service.RESTIntentService"
            android:exported="false"/>

        <!--
Service to asynchronously fetch a location address using a Geocoder. Setting the
android:exported attribute to "false" stops other apps from starting this
service, even when using an explicit intent.
        -->
        <service
            android:name="org.peacekeeper.service.FetchAddressIntentService"
            android:exported="false"/>



    </application>

</manifest><!--
            <service android:name="udinic.accounts_authenticator_example.authentication.UdinicAuthenticatorService"
                 android:exported="false"
                 android:process=":auth">
            <intent-filter><action android:name="android.accounts.AccountAuthenticator" /> </intent-filter>
            <meta-data android:name="android.accounts.AccountAuthenticator" android:resource="@xml/authenticator" />
        </service>




        &lt;!&ndash; See http://developer.android.com/training/sync-adapters/creating-authenticator.html#DeclareAuthenticator &ndash;&gt;
        <service
            android:name="org.peacekeeper.account.AuthenticatorService"
            android:exported="false"
            android:description="@string/AuthSvcDesc"
            android:label="@string/AuthSvcDesc"
            android:stopWithTask="false">
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator"/>
            </intent-filter>
            <meta-data
                android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticator" />
        </service>
-->
